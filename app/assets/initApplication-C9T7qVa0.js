import{a as c,s as f,u as i,A as p,d as w,r as u}from"./index-C1_1EwQU.js";async function d({request:a}){const t=await c();if(!t){const e=new URLSearchParams(a.url),n=e.get("mode"),o=e.get("oobCode");if(n==="signIn"&&o){await f(a.url);const r=await c();i.getState().setUser(r!==null)}return null}return t}const h=async({repo:a})=>{const t=await fetch(`https://raw.githubusercontent.com/offgap/${a}/main/config.json`);if(!t.ok)throw new Error("Fetching GitHub config failed");const e=await t.text(),n=JSON.parse(e);if(n?.project&&n?.meta&&Array.isArray(n.pages))return n;throw new Error("Parsing GitHub config failed")},g=async({repo:a})=>{const{setConfig:t}=i.getState(),e=await h({repo:a});return t(e),e},l=(a,t)=>Object.hasOwn(a,t),m=async a=>{const t=await a.getIdToken();if(typeof t!="string"||!t.length)throw new Error("User auth failed");const e=await fetch(`${p}/user/`,{method:"GET",headers:new Headers({Authorization:`Bearer ${t}`,"Content-Type":"application/json"})});if(!e.ok)throw new Error("Fetching userData failed");const n=await e.json();if(!(n.pid&&n.repo))throw new Error("Userâ€™s data is incomplete: no repo and/or pid");return n},y=(()=>{let a=!0;return async t=>{if(a){a=!1;const e=i.getState(),n=await m(t);return Object.entries(n).map(([o,r])=>{if(r!==void 0){const s=`set${o.at(0)?.toUpperCase()}${o.slice(1)}`;l(e,s)&&typeof e[s]=="function"&&e[s](r)}}),n}return i.getState()}})();async function S({request:a}){try{const t=await d({request:a});if(!t){window.localStorage.removeItem("data"),window.history.replaceState(null,"","/app/"),window.location.pathname!=="/app/"&&(window.location.pathname="/app/");return}const{pid:e,repo:n,domain:o}=await y(t);if(o)w({pid:e,repo:n,domain:o}),await g({repo:n});else{const{pathname:r}=new URL(a.url);if(!r.startsWith("/app/domain/"))return u("/app/domain/")}}catch(t){console.error(t)}}export{S as init};
