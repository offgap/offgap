import{a as f,s as l,u as r,A as m,d as y,r as S}from"./index-Huav16-7.js";async function C({request:o}){const t=await f();if(!t){const e=new URLSearchParams(o.url),a=e.get("mode"),n=e.get("oobCode");if(a==="signIn"&&n){await l(o.url);const i=await f();r.getState().setUser(i!==null)}return null}return t}const U=async({repo:o})=>{const t=await fetch(`https://raw.githubusercontent.com/offgap/${o}/main/config.json`);if(!t.ok)throw new Error("Fetching GitHub config failed");const e=await t.text(),a=JSON.parse(e);if(a?.project&&a?.meta&&Array.isArray(a.pages))return a;throw new Error("Parsing GitHub config failed")},v=async({repo:o})=>{const{setConfig:t}=r.getState(),e=await U({repo:o});return t(e),e},D=async o=>{const t=await o.getIdToken();if(typeof t!="string"||!t.length)throw new Error("User auth failed");const e=await fetch(`${m}/user/`,{method:"GET",headers:new Headers({Authorization:`Bearer ${t}`,"Content-Type":"application/json"})});if(!e.ok)throw new Error("Fetching userData failed");const a=await e.json();if(!(a.pid&&a.repo))throw new Error("Userâ€™s data is incomplete: no repo and/or pid");return a},E=(()=>{let o=!0;return async t=>{if(o){o=!1;const{setPid:w,setSid:u,setRepo:g,setDomain:h}=r.getState(),{pid:s,sid:c,repo:d,domain:p}=await D(t);return s&&w(s),c&&u(c),d&&g(d),p&&h(p),{pid:s,sid:c,repo:d,domain:p}}const{pid:e,sid:a,repo:n,domain:i}=r.getState();return{pid:e,sid:a,repo:n,domain:i}}})();async function k({request:o}){try{const t=await C({request:o});if(!t){window.localStorage.removeItem("data"),window.history.replaceState(null,"","/app/"),window.location.pathname!=="/app/"&&(window.location.pathname="/app/");return}const{pid:e,repo:a,domain:n}=await E(t);if(n)y({pid:e,repo:a,domain:n}),await v({repo:a});else{const{pathname:i}=new URL(o.url);if(!i.startsWith("/app/domain/"))return S("/app/domain/")}}catch(t){console.error(t)}}export{k as init};
